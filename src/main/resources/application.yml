server:
  port: 8099


spring:
  datasource:
    url: jdbc:mysql://localhost:3306/content_center?useUnicode=true&useJDBCCompliantTimezoneShift=true&serverTimezone=UTC&characterEncoding=utf8
    hikari:
      username: root
      password: root
      driver-class-name: com.mysql.cj.jdbc.Driver

  cloud:
    nacos:
      discovery:
        # 指定nacos server 地址（服务发现）
        server-addr: localhost:8848
        # 集群名称
        cluster-name: BJ
          # 元数据 版本控制 比如 v1版本只能调用的服务的v1版本
          #metadata:
          #version: v1
        #target-version: v1
        # namespace隔离，只能调用相同namespace,不能跨调
        #namespace: 2dcb686f-ded3-4139-93df-68154be35c05
    # --------------sentinel配置--------------------------
    sentinel:
      # nacos配置sentinel持久化 方案2 -推模式
      #      datasource:
      #        # 名称随意
      #        flow:
      #          nacos:
      #            server-addr: localhost:8848
      #            dataId: ${spring.application.name}-flow-rules
      #            groupId: SENTINEL_GROUP
      #            # 规则类型，取值见：
      #            # org.springframework.cloud.alibaba.sentinel.datasource.RuleType
      #            rule-type: flow
      #        degrade:
      #          nacos:
      #            server-addr: localhost:8848
      #            dataId: ${spring.application.name}-degrade-rules
      #            groupId: SENTINEL_GROUP
      #            rule-type: degrade
      #        system:
      #          nacos:
      #            server-addr: localhost:8848
      #            dataId: ${spring.application.name}-system-rules
      #            groupId: SENTINEL_GROUP
      #            rule-type: system
      #        authority:
      #          nacos:
      #            server-addr: localhost:8848
      #            dataId: ${spring.application.name}-authority-rules
      #            groupId: SENTINEL_GROUP
      #            rule-type: authority
      #        param-flow:
      #          nacos:
      #            server-addr: localhost:8848
      #            dataId: ${spring.application.name}-param-flow-rules
      #            groupId: SENTINEL_GROUP
      #            rule-type: param-flow

      filter:
        # 关闭/打开 掉用spring MVC端点的保护（用于sentinel）
        enabled: true
      #sentinel持久化方案1和2用，方案3不用，注释掉
      transport:
        #指定sentinel 控制台的地址
        dashboard: localhost:8080

    #------------------------spring cloud stream 配置（MQ生产者）--------------------
    stream:
      rocketmq:
        binder:
          name-server: 127.0.0.1:9876
        bindings:
          output:
            producer:
              # SpringCloudStream + rocketMQ 实现分布式事务
              transactional: true
              # tx-add-bonus-group 和类 AddBonusTransactionListener 一致
              group: tx-add-bonus-group
      bindings:
        output:
          # 用来指定topic
          destination: add-bonus
        # my-output 和类MySource 里面的MY_OUTPUT 一致
        #my-output:
          #destination: stream-my-topic




  application:
    # 服务名称尽量用-，不要用_，不要用特殊字符
    name: content-center


  #解决Feign 2个一样名称的FeignClient
  main:
    allow-bean-definition-overriding: true

# 负载均衡：随机选择一个  RandomRule
#user-center:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule


ribbon:
  eager-load:
    # 饥饿加载，多个用逗号隔开
    clients: user-center

logging:
  level:
    # feign 的日志级别
    com.itmuch.contentcenter.feignclient.UserCenterFeignClient: info
    # 为了解决代码加入了spring cloud stream,则疯狂打印nacos的日志
    com.alibaba.nacos: error
  config: classpath:spring-logback.xml
#1 方法实现 feign 日志
#com.itmuch.contentcenter.feignclient.UserCenterFeignClient: debug
#2 配置属性实现 feign 日志
feign:
  # 为feign整合sentinel
  sentinel:
    enabled: true
  client:
    config:
      # 想要调用的微服务的名称(user-center:局部配置，default:全局配置)
      default:
        # feign 日志的级别
        loggerLevel: full
        # feign 拦截器传递token
        requestInterceptors:
          - com.itmuch.contentcenter.interceptor.TokenRelayRequestIntecepor
  httpclient:
    # 配置连接池 提升15%左右(性能优化)：让feign使用apache httpclient做请求：而不是默认的urlconnection
    enabled: true
    # feign的最大连接数
    max-connections: 200
    # feign单个路径的最大连接数
    max-connections-per-route: 50
    # 配置连接池 提升15%左右(性能优化) 2选一
#  okhttp:
#    enabled: true


# 打开所有的端点(可以看检查接口)
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      # MQ的健康监控
      # /actuator/bindings
      # /actuator/channels
      # /actuator/health
      show-details: always

resttemplate:
  sentinel:
    # 关闭@SentinelRestTemplate注解(发调试的时候可以使用)
    enabled: false

# sentinel 持久化方案3，添加启动参数
#ahas.namespace: default
#ahas.license: e328aa8090a241aabd6f131636770ebd
## 应用名称
#project.name: content-center

#--------------------------rocket mq 配置--------------------------
#rocketmq:
#  name-server: 127.0.0.1:9876
#  producer:
#    # 小坑：必须指定group
#    group: test-group

#------------------------jwt(用户加密token)---------------------
jwt:
  # 秘钥
  secret: abcdefg
  # 有效期，单位秒，默认2周
  expire-time-in-second: 1209600


